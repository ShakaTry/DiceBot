name: DiceBot CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Simulation automatique quotidienne à 9h UTC
    - cron: '0 9 * * *'
    # Tests et monitoring toutes les heures (optionnel)
    - cron: '0 * * * *'

env:
  PYTHON_VERSION: '3.11'

jobs:
  tests:
    name: 🧪 Tests & Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        
    - name: 📥 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: 🔍 Lint with ruff
      run: ruff check --output-format=github src tests
      
    - name: 📝 Format check
      run: ruff format --check src tests
      
    - name: 🔬 Type checking
      run: pyright src tests
      
    - name: ✅ Run tests
      run: pytest --cov=dicebot --cov-report=xml --cov-report=term
      
    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  simulation:
    name: 🎲 Daily Simulation
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install DiceBot
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: 🎯 Run Conservative Simulation
      run: |
        python -m DiceBot simulate \
          --capital 100 \
          --strategy fibonacci \
          --preset conservative \
          --sessions 50 \
          --detailed-logs \
          --output-file conservative_daily.json
          
    - name: 🚀 Run Aggressive Simulation
      run: |
        python -m DiceBot simulate \
          --capital 250 \
          --strategy adaptive \
          --preset aggressive \
          --sessions 30 \
          --detailed-logs \
          --output-file aggressive_daily.json
          
    - name: 📈 Strategy Comparison
      run: |
        python -m DiceBot compare \
          --capital 200 \
          --strategies martingale fibonacci composite \
          --sessions 20 \
          --output-file daily_comparison.json
          
    - name: 📋 Upload Results
      uses: actions/upload-artifact@v3
      with:
        name: simulation-results-${{ github.run_number }}
        path: |
          *.json
          betlog/
        retention-days: 30
        
    - name: 📢 Slack Notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: |
          🎲 DiceBot Daily Simulation Complete!
          
          📊 **Results Summary:**
          - Conservative (Fibonacci): Check artifacts
          - Aggressive (Adaptive): Check artifacts  
          - Strategy Comparison: Check artifacts
          
          📈 **Repository:** ${{ github.repository }}
          📝 **Commit:** ${{ github.sha }}
          🔗 **Artifacts:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy:
    name: 🚀 Deploy & Notify
    runs-on: ubuntu-latest
    needs: [tests, simulation]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build
        
    - name: 📋 Upload package
      uses: actions/upload-artifact@v3
      with:
        name: dicebot-package-${{ github.run_number }}
        path: dist/
        
    - name: 🎉 Success Notification
      uses: 8398a7/action-slack@v3
      with:
        status: success
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: |
          ✅ **DiceBot Deployment Successful!**
          
          🔄 **Branch:** main
          📝 **Commit:** ${{ github.sha }}
          📦 **Package:** Available in artifacts
          🔗 **Repository:** ${{ github.repository }}
          
          🎲 Ready for production use!
