name: 🏷️ Release & Package

# Trigger on manual dispatch or version tags
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  PYTHON_VERSION: '3.11'

jobs:
  # ================================================================
  # 🏷️ CREATE RELEASE - Automatic versioning and changelog
  # ================================================================
  create-release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    
    steps:
    - name: 📂 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0  # Need full history for setuptools_scm
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install setuptools-scm[toml] build
        
    - name: 🔢 Determine Version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # Manual trigger - create new version
          CURRENT_VERSION=$(python -m setuptools_scm --strip-dev)
          echo "Current version: $CURRENT_VERSION"
          
          # Parse version and bump
          IFS='.' read -r major minor patch <<< "${CURRENT_VERSION#v}"
          case "${{ github.event.inputs.version_bump }}" in
            major) NEW_VERSION="v$((major + 1)).0.0" ;;
            minor) NEW_VERSION="v${major}.$((minor + 1)).0" ;;
            patch) NEW_VERSION="v${major}.${minor}.$((patch + 1))" ;;
          esac
          
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Create and push tag
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin "$NEW_VERSION"
        else
          # Tag trigger - use existing tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$VERSION" >> $GITHUB_OUTPUT
        fi
        
    - name: 📝 Generate Changelog
      id: changelog
      run: |
        # Get previous tag for changelog
        PREV_TAG=$(git tag -l --sort=-version:refname | grep -v "${{ steps.version.outputs.tag }}" | head -n1)
        
        if [ -z "$PREV_TAG" ]; then
          echo "First release - showing all commits"
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          echo "Changes since $PREV_TAG"
          CHANGELOG=$(git log ${PREV_TAG}..${{ steps.version.outputs.tag }} --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        # Save changelog to file
        cat > CHANGELOG.md << 'EOF'
        ## 🎯 What's Changed
        
        $CHANGELOG
        
        ## 📊 DiceBot Features
        - 🎲 Provably Fair dice system (Bitsler compatible)
        - 🧠 Advanced betting strategies (7 built-in + composite)
        - 📈 Performance simulation engine with multiprocessing
        - 🔒 Nonce constraint handling with parking strategy
        - 📊 Detailed logging and metrics
        - 🚀 Production-ready Railway deployment
        - 💬 Slack integration for monitoring
        
        ## 🛠️ Installation
        ```bash
        pip install git+https://github.com/ShakaTry/DiceBot.git@${{ steps.version.outputs.tag }}
        ```
        
        **Full Changelog**: https://github.com/ShakaTry/DiceBot/commits/${{ steps.version.outputs.tag }}
        EOF
        
        echo "changelog_file=CHANGELOG.md" >> $GITHUB_OUTPUT

  # ================================================================
  # 📦 BUILD PACKAGE - Create distributable package
  # ================================================================
  build-package:
    name: 📦 Build Package
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: 📂 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
        ref: ${{ needs.create-release.outputs.tag }}
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📦 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools-scm[toml]
        
    - name: 🏗️ Build package
      run: |
        python -m build
        
    - name: 🔍 Verify package
      run: |
        python -m twine check dist/*
        
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: dicebot-package-${{ needs.create-release.outputs.version }}
        path: dist/
        retention-days: 30

  # ================================================================
  # 🚀 PUBLISH RELEASE - Create GitHub release with assets
  # ================================================================
  publish-release:
    name: 🚀 Publish Release
    runs-on: ubuntu-latest
    needs: [create-release, build-package]
    permissions:
      contents: write
    
    steps:
    - name: 📂 Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ needs.create-release.outputs.tag }}
        
    - name: 📥 Download package artifacts
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: dicebot-package-${{ needs.create-release.outputs.version }}
        path: dist/
        
    - name: 📝 Generate Release Notes
      run: |
        cat > release_notes.md << 'EOF'
        # 🎲 DiceBot ${{ needs.create-release.outputs.version }}
        
        Advanced AI-driven dice bot with provably fair gaming and sophisticated betting strategies.
        
        ## 🚀 Quick Start
        ```bash
        # Install from source
        pip install git+https://github.com/ShakaTry/DiceBot.git@${{ needs.create-release.outputs.tag }}
        
        # Run simulation
        python -m DiceBot simulate --capital 100 --strategy fibonacci --preset conservative
        ```
        
        ## 📦 Package Assets
        - `dicebot-${{ needs.create-release.outputs.version }}-py3-none-any.whl` - Wheel package
        - `DiceBot-${{ needs.create-release.outputs.version }}.tar.gz` - Source distribution
        
        ## 🔗 Links
        - 📚 [Documentation](https://github.com/ShakaTry/DiceBot/blob/main/CLAUDE.md)
        - 🎯 [Issues](https://github.com/ShakaTry/DiceBot/issues)
        - 💬 [Discussions](https://github.com/ShakaTry/DiceBot/discussions)
        - 🚀 [Production Instance](https://dicebot-production-bba9.up.railway.app)
        EOF
        
    - name: 🏷️ Create GitHub Release
      uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.create-release.outputs.tag }}
        name: "🎲 DiceBot ${{ needs.create-release.outputs.version }}"
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          dist/*.whl
          dist/*.tar.gz

  # ================================================================
  # 📢 NOTIFY SUCCESS - Slack notification
  # ================================================================
  notify:
    name: 📢 Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, publish-release]
    if: always()
    
    steps:
    - name: 📢 Slack Notification
      if: ${{ needs.publish-release.result == 'success' }}
      run: |
        echo "🎉 DiceBot ${{ needs.create-release.outputs.version }} released successfully!"
        echo "📦 GitHub Release: https://github.com/ShakaTry/DiceBot/releases/tag/${{ needs.create-release.outputs.tag }}"
        # Add actual Slack webhook call here if needed
