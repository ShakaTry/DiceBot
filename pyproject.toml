[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "DiceBot"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
description = "Dice Bot Drived By AI"
dependencies = [
    "numpy>=1.24.0", 
    "scipy>=1.10.0", 
    "rich>=13.0.0", 
    "pyyaml>=6.0.0",
    "requests>=2.31.0",
    "slack-sdk>=3.23.0",
    "psutil>=5.9.0",
    "schedule>=1.2.0",
    "flask>=2.3.0"
]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.md"
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "copier",
    "pipdeptree",
    "pre-commit",
    "pyright",
    "pytest",
    "pytest-cov",
    "ruff",
    "tox-direct",
    "types-mock",
]

[project.scripts]
DiceBot = "DiceBot.__main__:main"

[project.urls]
GitHub = "https://github.com/ShakaTry/DiceBot"

[[project.authors]] # Further authors may be added by duplicating this section
email = "shakatry@gmail.com"
name = "ShakaTry"


[tool.setuptools_scm]
version_file = "src/DiceBot/_version.py"

[tool.pyright]
typeCheckingMode = "strict"
reportMissingImports = false # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = "error"
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "docs src tests"

[tool.coverage.run]
data_file = "/tmp/DiceBot.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,type-checking,tests}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals =
    pytest
    pre-commit
    pyright
commands =
    pre-commit: pre-commit run --all-files --show-diff-on-failure {posargs}
    type-checking: pyright src tests {posargs}
    tests: pytest --cov=DiceBot --cov-report term --cov-report xml:cov.xml {posargs}
"""

[tool.ruff]
src = ["src", "tests"]
line-length = 88
lint.select = [
    "B",   # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",  # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",   # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",   # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",   # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",   # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "SLF", # self - https://docs.astral.sh/ruff/settings/#lintflake8-self
]

[tool.ruff.lint.per-file-ignores]
# By default, private member access is allowed in tests
# See https://github.com/DiamondLightSource/python-copier-template/issues/154
# Remove this line to forbid private member access in tests
"tests/**/*" = ["SLF001"]
